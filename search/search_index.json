{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This is the XYZ Tech Blog There are a few things here that you might like. There's a series on \"I'm Glad I Learned\": Journeys through learning something technical. None of those is at all meant as a substitute for reference documentation. It's just about the journey. Who's it for? Any software engineers as you'll need to be a bit tech-savvy. There a lots of links to the main docs for whatever we're writing about. If you're not that technical, you might find some of this a bit of a stretch. You be the judge. You can follow our path, which might be handy for getting front of any detours. Or just scan it for help picking out an overview. Contributors Author Mugshot Bio Stephen Harrison Stephen is a member of the awesome SRE team at XYZ. He knows quite a bit about enterprise software and building cloud-native architectures. He knows less about infrastructure things like DNS, but he knows people who do know that stuff cold, which is much better.","title":"This is the XYZ Tech Blog"},{"location":"#this-is-the-xyz-tech-blog","text":"There are a few things here that you might like. There's a series on \"I'm Glad I Learned\": Journeys through learning something technical. None of those is at all meant as a substitute for reference documentation. It's just about the journey.","title":"This is the XYZ Tech Blog"},{"location":"#whos-it-for","text":"Any software engineers as you'll need to be a bit tech-savvy. There a lots of links to the main docs for whatever we're writing about. If you're not that technical, you might find some of this a bit of a stretch. You be the judge. You can follow our path, which might be handy for getting front of any detours. Or just scan it for help picking out an overview.","title":"Who's it for?"},{"location":"#contributors","text":"Author Mugshot Bio Stephen Harrison Stephen is a member of the awesome SRE team at XYZ. He knows quite a bit about enterprise software and building cloud-native architectures. He knows less about infrastructure things like DNS, but he knows people who do know that stuff cold, which is much better.","title":"Contributors"},{"location":"kotlin/","text":"Kotlin is a newish language. It's 100% compatible with Java, so we thought it was worth giving it a shot. Here's how we got good at it. Starting out We already knew Java, so we didn't think we'd be in for any surprises. We were wrong. In a good way. We started reading the reference documentation and tried our hand at the Kotlin Koans . But we got bored quickly because we already know how to add numbers. Then we found a pretty opinionated comparison of Kotlin to Java . We go bored here too. Yes, but what's it like? How about the Kotlin tutorials ? We could set up IntelliJ IDEA but that looked like a lot of steps. We didn't want to get distracted by learning IntelliJ IDEA internals. So we went for the command line instead. We wrote some Kotlin","title":"I'm Glad I Learned: Kotlin"},{"location":"kotlin/#starting-out","text":"We already knew Java, so we didn't think we'd be in for any surprises. We were wrong. In a good way. We started reading the reference documentation and tried our hand at the Kotlin Koans . But we got bored quickly because we already know how to add numbers. Then we found a pretty opinionated comparison of Kotlin to Java . We go bored here too. Yes, but what's it like? How about the Kotlin tutorials ? We could set up IntelliJ IDEA but that looked like a lot of steps. We didn't want to get distracted by learning IntelliJ IDEA internals. So we went for the command line instead.","title":"Starting out"},{"location":"kotlin/#we-wrote-some-kotlin","text":"","title":"We wrote some Kotlin"},{"location":"spring-boot-free-stuff/","text":"Spring Boot gives you a ton free stuff out of the box. We went on journey to find the best stuff. Here's where we went. ...","title":"I'm Glad I Learned: Spring Boot's Free Stuff"},{"location":"webflux/","text":"WebFlux is the Spring Framework's implementation of \"Web on a Reactive Stack\". This \"I'm Glad I Learned\" story is about one engineer's journey learning the tech. It is definitely not meant to be a substitute for the reference documentation above, which is astonishingly good documentation on any subject. But specifically about this topic. The gist The Reactive Manifesto lists the reasons we need to get away from blocking monolithic code that doesn't scale well. The Microservice pattern (see Martin Fowler's take ) looks like it's a direction that maps to how large engineering organizations can be more nimble and is a good match for how cloud-native architectures work best. If you remember back in the day we ran clusters of JBoss servers on a mountain of hardware in data centers, you'll understand. We needed big iron because all the software was lumped together and processed requests by blocking a thread. Threads are by no means free. We can do better.","title":"I'm Glad I Learned: WebFlux"},{"location":"webflux/#the-gist","text":"The Reactive Manifesto lists the reasons we need to get away from blocking monolithic code that doesn't scale well. The Microservice pattern (see Martin Fowler's take ) looks like it's a direction that maps to how large engineering organizations can be more nimble and is a good match for how cloud-native architectures work best. If you remember back in the day we ran clusters of JBoss servers on a mountain of hardware in data centers, you'll understand. We needed big iron because all the software was lumped together and processed requests by blocking a thread. Threads are by no means free. We can do better.","title":"The gist"},{"location":"webflux/#_1","text":"","title":""}]}